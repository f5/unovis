{
  "root": true,
  "ignorePatterns": ["packages/website/src/examples/**/*.component.ts", "packages/website/src/examples/**/*.module.ts", "packages/website/src/examples/**/*.svelte"],
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaFeatures": {
      "jsx": true
    },
    "extraFileExtensions": [".svelte"]
  },
  "overrides": [
    {
      "files": ["*.js", "*.jsx", "*.ts", "*.tsx"],
      "extends": [".eslintrc.base", "plugin:@typescript-eslint/recommended"],
      "parser": "@typescript-eslint/parser",
      "rules": {
        "indent": "off",
        "no-unused-expressions": "off",
        "comma-dangle": "off",
        "@typescript-eslint/comma-dangle": ["error", {
            "arrays": "always-multiline",
            "objects": "always-multiline",
            "imports": "always-multiline",
            "exports": "always-multiline",
            "functions": "never",
            "enums": "always-multiline",
            "generics": "always-multiline",
            "tuples": "always-multiline"
        }],
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": ["error"],
        "@typescript-eslint/indent": ["error", 2],
        "@typescript-eslint/no-unused-expressions": ["error"],
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/explicit-module-boundary-types": ["warn"],
        "@typescript-eslint/explicit-member-accessibility": "off",
        "@typescript-eslint/type-annotation-spacing": ["error"],
        "@typescript-eslint/member-delimiter-style": ["error", {
          "multiline": {
            "delimiter": "semi",
            "requireLast": true
          },
          "singleline": {
            "delimiter": "semi",
            "requireLast": false
          }
        }],
        "multiline-ternary": "off",
        "@typescript-eslint/explicit-function-return-type": ["error", {
          "allowExpressions": true
        }],
        "keyword-spacing": "off",
        "@typescript-eslint/keyword-spacing": ["error"],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "variable",
            "modifiers": ["exported"],
            "format": ["camelCase", "UPPER_CASE", "PascalCase"]
          },
          {
            "selector": "function",
            "modifiers": ["exported"],
            "format": ["camelCase", "PascalCase"]
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          {
            "selector": "enumMember",
            "format": ["PascalCase"]
          }
        ]
      }
    },
    {
      "files": ["*.svelte"],
      "extends": [
        ".eslintrc.base",
        "plugin:@ota-meshi/svelte/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
      ],
      "parser": "svelte-eslint-parser",
      "parserOptions": {
        "parser": "@typescript-eslint/parser",
      },
      "rules": {
        "@ota-meshi/svelte/indent": ["error"],
        "no-use-before-define": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
      }
    }
  ]
}
